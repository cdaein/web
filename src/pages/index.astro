---
import Layout from "../layouts/Layout.astro";
import { getCollection } from "astro:content";
import { site } from "@data/siteMetadata";
import PostHeader from "@components/mdx/PostHeader.astro";
// import RssXml from "@components/rss/RssXml.astro";
// import WriteFile from "@components/rss/WriteFile.astro";

const workPosts = (
  await getCollection("work", ({ data }) => {
    return import.meta.env.PROD ? data.published === true : true;
  })
)
  // parse slug to simplify intermediate folders
  .map((post) => ({
    ...post,
    // astro default add all intermediate folder into slug. i want top-level routes only.
    // but transforming slug is giving me an error when used in IndexListItem
    // workaround is to manually define slug in frontmatter in each post (permalink)
    // slug: parseSlug(post.slug),
  }))
  // at some point getCollection() return order changed to be not chronological..
  // so manual sorting is necessary
  .sort((a, b) => {
    return new Date(b.data.date).getTime() - new Date(a.data.date).getTime();
  });
// only index published posts
// .filter((post) => post.data.published === true);

// for RSS, need to send both data to construct all the fields necessary in feed.xml
const allPosts = [...workPosts];

// Astro.glob() is deprecated
// https://docs.astro.build/en/guides/upgrade-to/v5/#what-should-i-do-3
// NOTE: consider using collections in the future

// const allMdx = (await Astro.glob("@content/work/**/*.mdx")).reverse();
// const allMdx = Object.values(
//   import.meta.glob("@content/work/**/*.mdx", { eager: true }),
// ).reverse();

// console.log(allPosts[0].data.draft);
// console.log(allMdx[0].frontmatter.draft);
---

<Layout title={"Index"} description={site.description}>
  <ul>
    {
      allPosts.map((post) => (
        <li>
          <a href={`/${post.slug}`}>
            <PostHeader post={post} />
          </a>
        </li>
      ))
    }
  </ul>
  <!-- <WriteFile fileUrl={"./dist/feed.xml"} slot="rss-writer"> -->
  <!--   <RssXml allPosts={allPosts} allMdx={allMdx} slot="rss-writer" /> -->
  <!-- </WriteFile> -->
</Layout>
