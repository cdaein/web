---
// really no need to use a separate package but..
// https://github.com/jonasmerlin/astro-seo

import { SEO } from "astro-seo";
import { site } from "@data/siteMetadata";
import { getCollection } from "astro:content";

const props = Astro.props;

const title = props.title ? `${props.title} â€¢ ${site.title}` : site.title;
const description = props.description || site.description;

// get latest project's thumbnail image
// it should be placed directly under each post folder with the name ./thumbnail.(jpg|jpeg|png)
const workPosts = (
  await getCollection("work", ({ data }) => {
    return data.draft !== true;
  })
)
  // reverse-chronological order
  .reverse();

// first, get all thumbnails from all work posts
const allImagesObj = import.meta.glob<{ default: ImageMetadata }>(
  `/src/content/work/**/thumb*`,
);

// filter the one from the latest post.
// then, use to find the object string key in <Image />
// https://docs.astro.build/en/recipes/dynamically-importing-images/
const imagePaths = Object.keys(allImagesObj).filter((key) =>
  key.includes(workPosts[0].slug),
);

const cover = (await allImagesObj[imagePaths[0]]()).default.src;
---

<head>
  <SEO
    charset="UTF-8"
    title={title}
    description={description}
    extend={{
      // extending the default link tags
      link: [{ rel: "icon", type: "image/svg+xml", href: "/favicon.svg" }],
      // extending the default meta tags
      meta: [
        { httpEquiv: "x-ua-compatible", content: "ie-edge" },
        {
          name: "viewport",
          content: "width=device-width, initial-scale=1, shrink-to-fit=no",
        },
        // opengraph
        { name: "og:title", content: title },
        { name: "og:description", content: description },
        { name: "og:type", content: "website" },
        { name: "og:image", content: cover },
        // twitter
        { name: "twitter:creator", content: site.author },
        { name: "twitter:title", content: title },
        { name: "twitter:description", content: description },
        { name: `twitter:card`, content: `summary_large_image` },
        { name: "twitter:image", content: `${site.siteUrl}${cover}` },
      ],
    }}
  />
  <meta name="viewport" content="width=device-width" />
  <meta name="generator" content={Astro.generator} />
  <slot />
</head>
