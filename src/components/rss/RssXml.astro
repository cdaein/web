---
// NOTE:
// Astro cannot render html full post from MDX files (for RSS feed).
// This is a workaround I found:
// https://scottwillsey.com/rss-pt2/

// TODO:
// - parse date format (RFC 2822)

import path from "node:path";
import moment from "moment";
import { site } from "@data/siteMetadata";

const { allPosts, allMdx } = Astro.props;

const posts = allPosts.filter((post: any) => post.data.draft !== true);
const mdxs = allMdx.filter((mdx: any) => mdx.frontmatter.draft !== true);

const rssHeaderXml = `<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="/rss/styles.xsl" type="text/xsl"?>
<rss version="2.0">
  <channel>
    <title>${site.title}</title>
    <description><![CDATA[ ${site.description} ]]></description>
    <link>${site.siteUrl}</link>`;

const rssFooterXml = `  </channel>
  </rss>
  `;
---

<Fragment set:html={rssHeaderXml} />
{
  posts.map((post: any, i: number) => {
    const mdx = mdxs[i];

    return (
      <>
        <Fragment
          set:html={`
    <item>
      <title>${post.data.title}</title>
      <link>${new URL(path.join("/", post.slug), site.siteUrl)}</link>
      <guid>${new URL(path.join("/", post.slug), site.siteUrl)}</guid>
      <description><![CDATA[ ${post.data.description}]]></description>
      <pubDate>${moment(posts[0].data.date).format("ddd, DD MMM YYYY")}</pubDate>
      <content:encoded><![CDATA[`}
        />
        <mdx.Content />
        <Fragment
          set:html={`]]></content:encoded>
    </item>`}
        />
      </>
    );
  })
}
<Fragment set:html={rssFooterXml} />
