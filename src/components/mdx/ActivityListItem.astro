---
import type { Activity } from "@data/activities";
import { getEntry } from "astro:content";
import moment from "moment";

const { data, showWorkTitle = false } = Astro.props as {
  data: Activity;
  showWorkTitle?: boolean;
};
const { slug, date, title, role, place, city, country, link } = data;

// some entries may not have corresponding post slug.
const entry = slug && (await getEntry("work", Array.isArray(slug) ? slug[0] : slug));
const workTitle = entry && entry?.data.title;
---

<li role="listitem" class="">
  {showWorkTitle && workTitle && <span>{workTitle} - </span>}
  {role && <span>{role} at </span>}
  {
    link ? (
      <span>
        <>
          <>
            <>
              <!-- prettier-ignore -->
              <a
                href={Array.isArray(link) ? link[0] : link}
                target="_blank"
                class:list={["italic no-underline"]}
              >{title}</a><span>,</span>
            </>
          </>
        </>
      </span>
    ) : (
      <span>{title},</span>
    )
  }
  {place && <span>{place},</span>}
  {city && <span>{city},</span>}
  {country && <span>{country},</span>}
  <span
    >{
      Array.isArray(date)
        ? `${moment(date[0]).year()}-${moment(date[1]).year()}`
        : moment(new Date(date)).year()
    }</span
  >
  {
    Array.isArray(link) && link.length > 1 && (
      <span>
        (more
        {link.map((l, i) => {
          if (i === 0) return;
          return (
            <a href={l} target="_blank" style={{ textDecoration: "none" }}>
              <span style={{ textDecoration: "underline" }}>
                link{i !== link.length - 1 && ","}
              </span>
            </a>
          );
        })}
        )
      </span>
    )
  }
</li>
